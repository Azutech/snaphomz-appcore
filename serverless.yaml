service: ocreal

frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-jetpack
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1 # or whatever your region is
  memorySize: 512
  # enviroment:
  #   PORT: ${env:PORT}
  #   # DEV MONGO URI
  #   MONGODB_DB_URI: ${env:MONGODB_DB_URI}
  #   # MYSQL DEV DB CONFIGURATION
  #   HOST: ${env:HOST}
  #   MYSQL_PORT: ${env:MYSQL_PORT}
  #   MYSQL_USERNAME: ${env:MYSQL_USERNAME}
  #   MYSQL_PASSWORD: ${env:MYSQL_PASSWORD}
  #   MYSQL_DB_NAME: ${env:MYSQL_DB_NAME}
  #   # DEV COGNITO BUYER POOL
  #   BUYER_COGNITO_USER_POOL_ID: ${env:BUYER_COGNITO_USER_POOL_ID}
  #   BUYER_COGNITO_CLIENT_ID: ${env:BUYER_COGNITO_CLIENT_ID}
  #   # DEV COGNITO SELLER POOL
  #   SELLER_COGNITO_USER_POOL_ID: ${env:SELLER_COGNITO_USER_POOL_ID}
  #   SELLER_COGNITO_CLIENT_ID: ${env:SELLER_COGNITO_CLIENT_ID}
  #   # DEV AWS
  #   AWS_REGION_: ${env:AWS_REGION_}
  #   AWS_ACCESS_KEYS_ID: ${env:AWS_ACCESS_KEYS_ID}
  #   AWS_ACCESS_SECRET_KEY:
  #     ${env:AWS_ACCESS_SECRET_KEY}
  #     # DEV AWS COGNITO BUYER
  #   BUYER_AT_SECRET: ${env:BUYER_AT_SECRET}
  #   BUYER_RT_SECRET: ${env:BUYER_RT_SECRET}
  #   # DEV AWS COGNITO SELLER
  #   SELLER_AT_SECRET: ${env:SELLER_AT_SECRET}
  #   SELLER_RT_SECRET: ${env:SELLER_RT_SECRET}
  #   # DOJAH DEV CONFIGURATION
  #   DOJAH_BASE_URL: ${env:DOJAH_BASE_URL}
  #   DOHAJ_PUBLIC_KEY: ${env:DOHAJ_PUBLIC_KEY}
  #   DOJAH_PRIVATE_KEY: ${env:DOJAH_PRIVATE_KEY}
  #   DOJAH_APP_ID: ${env:DOJAH_APP_ID}
  #   # TWILO
  #   TWILO_SID: ${env:TWILO_SID}
  #   TWILO_AUTH_TOKEN: ${env:TWILO_AUTH_TOKEN}
  #   TWILO_PHONE_NUMBER: ${env:TWILO_PHONE_NUMBER}
  #   TWILO_PHONE_NUMBER_SID: ${env:TWILO_PHONE_NUMBER_SID}
  #   # NODEMAILER
  #   NODEMAILER_EMAIL_SERVICE: ${env:NODEMAILER_EMAIL_SERVICE}
  #   NODEMAILER_EMAIL_USER: ${env:NODEMAILER_EMAIL_USER}
  #   NODEMAILER_EMAIL_PASSWORD: ${env:NODEMAILER_EMAIL_PASSWORD}
  #   NODEMAILER_HOST: ${env:NODEMAILER_HOST}
  #   NODEMAILER_PORT: ${env:NODEMAILER_PORT}
  #   # S3
  #   S3_PROFILE_BUCKET: ${env:S3_PROFILE_BUCKET}
  #   # PAYSTACK
  #   PAYSTACK_SECRET_KEY: ${env:PAYSTACK_SECRET_KEY}
  #   PAYSTACK_PUBLIC_KEY: ${env:PAYSTACK_PUBLIC_KEY}

functions:
  main:
    handler: dist/main.handler
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'
